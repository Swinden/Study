demo()
# Now I compute the mean exit time in every experiment
mean(d670[,2])
# In this file I will discuss the first second room (with triangle in front of the door) and
# compare it to the standard room (room 1). I kept the width of the door fixed. As could be seen in the file
# "Finding optimal triangle position" the triangle has a distance to the door (when focussing on the vertical
# side of the triangle) of 35 pixels ( it is at x-position 665). Now we will compare the mean exit time for room 1
# and room 2 for the case with one door and do robustness-checks using 2 doors, random sizes/weight and visibility.
# Also I will plot a graph of the average exit times per person against the number of players left. This gives an
# indication in how fluently the system is evacuated. For the randomized case the triangle is at x = 660 (to allow fatter
# people to leave)
library(dplyr)
# First I load the data
room1st = as.data.frame(read.table("room1_st"))
room1r = as.data.frame(read.table("room1_r"))
room1twod = as.data.frame(read.table("room1_twodoors"))
room1vis = as.data.frame(read.table("room1_vis"))
room2st = as.data.frame(read.table("room2_st665"))
room2r = as.data.frame(read.table("room2_r660"))
room2twod = as.data.frame(read.table("room2_twodoors665"))
room2vis = as.data.frame(read.table("room2_vis665"))
# Now for room1 and room2 with 1 door, with persons with weight 80 and radius of 12 pixels
# Changing column names
names(room1st) = c("exit_pp", "exit_group", "rank", "nr_collisions")
names(room2_st) = c("exit_pp", "exit_group", "rank", "nr_collisions")
# Now for room1 and room2 with 1 door, with persons with weight 80 and radius of 12 pixels
# Changing column names
names(room1st) = c("exit_pp", "exit_group", "rank", "nr_collisions")
names(room2st) = c("exit_pp", "exit_group", "rank", "nr_collisions")
room1st
